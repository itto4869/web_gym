# You must change these to your own details.
[package]
name = "web_gym_backend"
description = "My super awesome Rust, WebAssembly, and Webpack project!"
version = "0.1.0"
authors = ["You <you@example.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.92"
console_error_panic_hook = "0.1.7"
reqwest = { version = "0.12.4", features = ["json"] } 
tokio = "1.38.0"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117" 
futures = "0.3.30"
wasm-bindgen-futures = "0.4.42"
flate2 = "1.0.30"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.2", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.69"
features = ["console", "Window", "Document", "Element", "HtmlElement", "HtmlInputElement",
            "HtmlCanvasElement", "HtmlSelectElement", "CanvasRenderingContext2d", "ImageData", "Performance"]

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.42"
js-sys = "0.3.69"
